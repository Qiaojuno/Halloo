# Hallo iOS App - Project Structure & Status
# Last Updated: 2025-09-13
# Status: Onboarding Flow Complete with Social Authentication

## PROJECT OVERVIEW
**App Name:** Hallo (iOS/SwiftUI)
**Purpose:** Elderly care task management via SMS workflow
**Architecture:** MVVM with Container Pattern (Dependency Injection)
**Target:** iOS 14+ minimum
**Current Status:** Onboarding flow complete with unified Remi branding

## XCODE PROJECT STRUCTURE

```
📁 Halloo/	
├── 📄 HalloApp.swift (App.swift renamed)
├── 📁 Core/
│   ├── 📄 App.swift ✅ COMPLETE
│   ├── 📄 AppFonts.swift ✅ COMPLETE - Poppins/Inter font system
│   ├── 📄 Container.swift ✅ IMPLEMENTED
│   ├── 📄 DataSyncCoordinator.swift ✅
│   ├── 📄 ErrorCoordinator.swift ✅
│   ├── 📄 NotificationCoordinator.swift ✅
│   └── 📄 String+Extensions.swift ✅
├── 📁 Models/
│   ├── 📄 Container.swift ✅
│   ├── 📄 ElderlyProfile.swift ✅
│   ├── 📄 Task.swift ✅
│   ├── 📄 User.swift ✅
│   ├── 📄 TaskCategory.swift ✅
│   ├── 📄 TaskFrequency.swift ✅
│   ├── 📄 TaskStatus.swift ✅
│   ├── 📄 ProfileStatus.swift ✅
│   ├── 📄 ResponseType.swift ✅
│   ├── 📄 SMSMessageType.swift ✅
│   ├── 📄 SMSResponse.swift ✅
│   ├── 📄 GalleryHistoryEvent.swift ✅
│   └── 📄 SubscriptionStatus.swift ✅
├── 📁 Services/
│   ├── 📄 FirebaseAuthenticationService.swift ✅ COMPLETE
│   ├── 📄 FirebaseDatabaseService.swift ✅ COMPLETE
│   ├── 📄 MockAnalyticsService.swift ✅
│   ├── 📄 MockAuthenticationService.swift ✅
│   ├── 📄 MockDatabaseService.swift ✅
│   ├── 📄 MockNotificationService.swift ✅
│   ├── 📄 MockSMSService.swift ✅
│   └── Protocol files...
├── 📁 ViewModels/
│   ├── 📄 DashboardViewModel.swift ✅
│   ├── 📄 OnboardingViewModel.swift ✅
│   ├── 📄 ProfileViewModel.swift ✅
│   └── 📄 TaskViewModel.swift ✅
├── 📁 Views/
│   ├── 📄 ContentView.swift ✅ COMPLETE
│   ├── 📄 DashboardView.swift ✅ COMPLETE
│   ├── 📄 GalleryView.swift ✅ COMPLETE
│   ├── 📄 GalleryDetailView.swift ✅ COMPLETE
│   ├── 📄 ProfileViews.swift ✅ COMPLETE - 6-step onboarding
│   ├── 📄 TaskViews.swift ✅ COMPLETE - 2-step habit creation
│   ├── 📄 LoginView.swift ✅ COMPLETE - Social authentication
│   └── 📄 OnboardingViews.swift ✅ COMPLETE - Welcome/Quiz screens
├── 🎨 Assets.xcassets/
│   ├── 🖼️ Character.imageset/Mascot.png ✅
│   ├── 🖼️ MascotSitting.imageset/ ✅
│   ├── 🖼️ Bird1.imageset/Bird.png ✅
│   ├── 🖼️ Bird2.imageset/Bird.png ✅
│   └── 🖼️ GoogleIcon.imageset/ ✅
├── 📁 Fonts/
│   ├── Poppins-Medium.ttf ✅
│   └── Inter-VariableFont.ttf ✅
└── 📁 Firebase Configuration/
    └── 📄 GoogleService-Info.plist ⚠️ REQUIRED
```

## COMPLETED VIEWS & FEATURES

### Authentication & Onboarding ✅
1. **WelcomeView** - Large white canvas card with "Create Reminders, For Anyone." (28pt bold, reduced line spacing, dual navigation: Get Started → Quiz, Sign In → Login)
2. **LoginView** - Apple Sign-In & Google Sign-In with pill-shaped buttons
3. **QuizView** - Elderly needs assessment questionnaire
4. **OnboardingCompleteView** - Success celebration screen

### Profile Management ✅
1. **ProfileOnboardingFlow** - 6-step guided profile creation
2. **Step 1** - Profile form (name, relationship, phone)
3. **Step 2** - Profile complete summary
4. **Step 3** - SMS test introduction
5. **Step 4** - SMS confirmation wait
6. **Step 5** - Success state
7. **Step 6** - First habit creation

### Task Management ✅
1. **TaskCreationView** - 2-step habit creation flow
2. **HabitFormView** - Name, days, times selection
3. **ConfirmationMethodView** - Photo vs text selection

### Dashboard & Gallery ✅
1. **DashboardView** - Profile-specific task display
2. **GalleryView** - Photo archive with speech bubbles
3. **GalleryDetailView** - Full-screen photo with navigation

## FIREBASE INTEGRATION

### Required Services
- **Authentication** - Email/Password, Apple Sign-In, Google Sign-In
- **Firestore** - Users, Profiles, Tasks, Responses collections
- **Storage** - Photo uploads for responses

### Data Structure
```
/users/{userId}
  - email, displayName, subscriptionStatus, profileCount...

/profiles/{profileId}
  - userId, name, phoneNumber, status, relationship...

/tasks/{taskId}
  - userId, profileId, title, frequency, responseType...

/responses/{responseId}
  - userId, taskId, textResponse, photoURL, isCompleted...

/gallery_events/{eventId}
  - userId, eventType, eventData, timestamp...
```

## CURRENT NAVIGATION FLOW

```
App Launch
    ↓
ContentView (Router)
    ↓
Unauthenticated → WelcomeView → LoginView → Quiz → Profile
    ↓
Authenticated → TabView (2 tabs visible)
    ├── DashboardView (Home)
    └── GalleryView (Archive)
```

## DESIGN SYSTEM

### Typography
- **Logo**: Poppins-Medium, 73.93pt, tracking -1.5
- **Headers**: System Bold, 15pt, tracking -1
- **Body**: System Regular, 14pt
- **Buttons**: System Semibold, 16pt

### Colors
- **Background**: #f9f9f9
- **Cards**: #ffffff with 1px gray stroke
- **Primary**: #B9E3FF (buttons)
- **Text Primary**: #000000
- **Text Secondary**: #7A7A7A

### Components
- **Buttons**: Height 47pt, corner radius 23.5 (pill)
- **Cards**: Corner radius 10pt
- **Profile Images**: 44pt circles
- **Bottom Nav**: 94x43pt pill shape

## KEY BUSINESS RULES

1. **Profiles**: Maximum 4 elderly profiles per user
2. **Tasks**: Maximum 10 tasks per profile
3. **SMS**: 10-minute default response deadline
4. **Authentication**: Required before profile creation
5. **Confirmation**: SMS confirmation required for profiles

## DEVELOPMENT STATUS

### ✅ Complete
- Onboarding flow with social authentication
- Profile creation with SMS confirmation
- Task creation flow
- Dashboard with profile filtering
- Gallery with photo archive
- Firebase authentication integration
- Mock services for development

### 🚧 In Progress
- SMS integration with Twilio
- Real-time data sync
- Push notifications

### 📋 Planned
- Analytics dashboard
- Settings screen
- Subscription management
- Family member sharing

## REQUIRED DEPENDENCIES

### Swift Packages
- Firebase iOS SDK (Auth, Firestore, Storage)
- Google Sign-In SDK

### Configuration Files
- GoogleService-Info.plist (from Firebase Console)
- Bundle ID: com.yourcompany.hallo

## TESTING APPROACH

### Development
- Mock services via Container.makeForTesting()
- SwiftUI Canvas previews for all views
- Firebase emulators for local testing

### Production
- Real Firebase services
- Twilio SMS integration
- Device testing for accessibility

## NEXT STEPS

1. **Immediate**: Set up Firebase project and add GoogleService-Info.plist
2. **Short-term**: Integrate Twilio for SMS functionality
3. **Medium-term**: Implement analytics and subscription features
4. **Long-term**: Multi-device sync and family sharing

---

**For detailed UI specifications**: See `Hallo-UI-Integration-Plan.txt`
**For development patterns**: See `Hallo-Development-Guidelines.txt`
